import {
	Box,
	Input,
	Text,
	InputLeftElement,
	InputGroup,
	Button,
} from "@chakra-ui/react";
import { useEffect, useMemo, useState } from "react";
import "../styles/home.scss";
import { ArrowForwardIcon, Search2Icon } from "@chakra-ui/icons";
import RenderImagesList from "../components/ImagesList";
import { useDispatch, useSelector } from "react-redux";
import { getImages } from "../redux/actions/images";
import { toast } from "react-hot-toast";
import { useNavigate } from "react-router-dom";

export default function Home() {
	const dispatch = useDispatch();
	const navigate = useNavigate();
	const [searchText, setSearchText] = useState("");

	const { images = [], isLoading = true } = useSelector(
		(state) => state.images
	);

	const imagesList = useMemo(() => {
		if (searchText === "") return [...images];
		return images.filter(({ prompt }) => prompt.includes(searchText));
	}, [images, searchText]);

	const handleChange = (e) => {
		const { value } = e.target;
		setSearchText(value);
	};

	useEffect(() => {
		try {
			dispatch(getImages());
		} catch (error) {
			console.log("error");
			toast.error(error?.message || error);
		}

		return () => {};
	}, []);

	return (
		<Box className="home-page">
			<Box className="create-section">
				<Text fontSize="xl" as="b">
					Generate you own art, for FREE!
				</Text>
				<Button
					rightIcon={<ArrowForwardIcon />}
					colorScheme="ghost"
					variant="solid"
					isLoading={isLoading}
					onClick={() => navigate("/create")}
				>
					Generate
				</Button>
			</Box>
			<Box className="explore-section">
				<Text fontSize="xl" as="b">
					Look what the people are up to.
				</Text>
				<Text fontSize="md" color="gray">
					Explore a collection of imaginative and visually stunning images
					generated by OpenAI's DALL-E AI
				</Text>
			</Box>

			{!isLoading && (
				<InputGroup mt={5}>
					<InputLeftElement children={<Search2Icon color="gray.300" />} />
					<Input
						className="search-input"
						placeholder="Search here..."
						onChange={handleChange}
						value={searchText}
					/>
				</InputGroup>
			)}

			<RenderImagesList isLoading={isLoading} images={imagesList} />
			{/* <IconButton
				className="btn-back-to-top"
				aria-label="Search database"
				onClick={() => window.scrollTo({ top: 0, behavior: "smooth" })}
				icon={<TriangleUpIcon />}
			/> */}
		</Box>
	);
}
